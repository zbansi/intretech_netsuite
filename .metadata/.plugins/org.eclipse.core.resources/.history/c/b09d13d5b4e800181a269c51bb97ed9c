///BEGIN SAMPLE CODE
/**
 * Working example of Token-Based Authentication using Javascript to authenticate to another Restlet.
 * NOTICE: BE SURE TO UPDATE THE Paths IN THE require.config OBJECT TO BE ACCURATE WITH YOUR FILE DIRECTORY.
 * NOTICE: UPDATE requestURL, consumerKey, consumerSecret, tokenId, tokenSecret, and realm TO BE ACCURATE WITH YOUR ENVIRONMENT SETTINGS.
 * @NApiVersion 2.x
 * @NScriptType suitelet
 */
require.config({
	paths: {
		"oauth": "./oauth_valid",
		"cryptojs": "./crypto_lib",
	},
	shim: {
		"oauth": {
			exports: "OAuth"
		},
		"cryptojs": {
			exports: "CryptoJS"
		}
	}
});
define(['N/https', 'oauth', 'cryptojs'],
	function(https, oauth, cryptojs){
		function testRequest(context){
			if (context.request.method == 'GET'){
				var requestUrl = 'https://rest.na2.netsuite.com/app/site/hosting/restlet.nl?script=277&deploy=1'; //REST Endpoint URL
				var consumerKey = 'PASTE_CONSUMER_KEY_HERE'; //CONSUMER KEY
				var consumerSecret = 'PASTE_CONSUMER_SECRET_HERE'; //CONSUMER SECRET
				var tokenId = 'PASTE_TOKEN_ID_HERE'; //TOKEN ID
				var tokenSecret = 'PASTE_TOKEN_SECRET_HERE'; //TOKEN SECRET
				var realm = 'PASTE_REALM_HERE'; //REALM

				var reqBody = {
					"a_parameter":'abc123',
				};

				//Build Token-Based Authorization
				var auth = oauth({
				    consumer: {
				        public: consumerKey,
				        secret: consumerSecret
				    },
				    signature_method: 'HMAC-SHA256'
				});

				var token = {
				    public: tokenId,
				    secret: tokenSecret
				};

				var request_data = {
					url: requestUrl,
					method: 'POST',
					data: {}
				};

				var authHead =  auth.toHeader(auth.authorize(request_data, token));
				var reqHeaders = {
					'Content-Type': 'application/json',
					'Authorization': authHead.Authorization + ', realm="'+realm+'"'
				};

				var req = https.post({
					url: requestUrl,
					body: JSON.stringify(reqBody),
					headers: reqHeaders
				});

				log.debug({title:'Resp', details:req.body});

				var html = '<html><body>' +
					'Calling: ' +
					requestUrl +
					'<br><br>' +
					'Generated OAuth header:<br>' +
					authHead.Authorization + ', realm="' + realm + '"' +
					'<br><br>' +
					'Full header stack:<br>' +
					JSON.stringify(reqHeaders) +
					'<br><br>' +
					'Payload:<br>' +
					JSON.stringify(reqBody) +
					'<br><br>' +
					'Response:<br>' +
					req.body +
					'</body></html>';

				context.response.write(html);
			}
		}

		return {
			onRequest: testRequest
		};
	}
);
///END SAMPLE
