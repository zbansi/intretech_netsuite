package com.netsuite.suitetalk.client.common.authentication;

import com.netsuite.suitetalk.client.common.*;
import java.util.concurrent.*;
import com.netsuite.suitetalk.client.common.utils.*;

public class TokenPassport
{
    private String account;
    private String consumerKey;
    private String token;
    private String nonce;
    private Long timestamp;
    private SignatureAlgorithm signatureAlgorithm;
    private String signature;
    private String consumerSecret;
    private String tokenSecret;
    private boolean automaticallyUpdated;
    
    public TokenPassport() {
        this.signatureAlgorithm = SignatureAlgorithm.HMAC_SHA256;
    }
    
    public TokenPassport(final String account, final String consumerKey, final String token, final String nonce, final Long timestamp, final SignatureAlgorithm signatureAlgorithm, final String signature) {
        this.signatureAlgorithm = SignatureAlgorithm.HMAC_SHA256;
        this.account = account;
        this.consumerKey = consumerKey;
        this.token = token;
        this.nonce = nonce;
        this.timestamp = timestamp;
        this.signatureAlgorithm = signatureAlgorithm;
        this.signature = signature;
        this.automaticallyUpdated = false;
    }
    
    public TokenPassport(final String account, final String consumerKey, final String consumerSecret, final String token, final String tokenSecret) {
        this.signatureAlgorithm = SignatureAlgorithm.HMAC_SHA256;
        this.account = account;
        this.consumerKey = consumerKey;
        this.consumerSecret = consumerSecret;
        this.token = token;
        this.tokenSecret = tokenSecret;
        this.automaticallyUpdated = true;
    }
    
    public String getAccount() {
        return this.account;
    }
    
    public void setAccount(final String account) {
        this.account = account;
    }
    
    public String getConsumerKey() {
        return this.consumerKey;
    }
    
    public void setConsumerKey(final String consumerKey) {
        this.consumerKey = consumerKey;
    }
    
    public String getToken() {
        return this.token;
    }
    
    public void setToken(final String token) {
        this.token = token;
    }
    
    public String getNonce() {
        return this.nonce;
    }
    
    public void setNonce(final String nonce) {
        this.nonce = nonce;
    }
    
    public long getTimestamp() {
        return this.timestamp;
    }
    
    public void setTimestamp(final Long timestamp) {
        this.timestamp = timestamp;
    }
    
    public SignatureAlgorithm getSignatureAlgorithm() {
        return this.signatureAlgorithm;
    }
    
    public void setSignatureAlgorithm(final SignatureAlgorithm signatureAlgorithm) {
        this.signatureAlgorithm = signatureAlgorithm;
    }
    
    public String getSignature() {
        return this.signature;
    }
    
    public void setSignature(final String signature) {
        this.signature = signature;
    }
    
    public void setConsumerSecret(final String consumerSecret) {
        this.consumerSecret = consumerSecret;
    }
    
    public void setTokenSecret(final String tokenSecret) {
        this.tokenSecret = tokenSecret;
    }
    
    public boolean isAutomaticallyUpdated() {
        return this.automaticallyUpdated;
    }
    
    public void setAutomaticallyUpdated(final boolean automaticallyUpdated) {
        this.automaticallyUpdated = automaticallyUpdated;
    }
    
    public void update() {
        this.setNonce(CommonUtils.getRandomNonce());
        this.setTimestamp(TimeUnit.MILLISECONDS.toSeconds(System.currentTimeMillis()));
        this.setSignature(TbaUtils.getSignature(TbaUtils.getKey(this.consumerSecret, this.tokenSecret), TbaUtils.getBaseString(this), this.getSignatureAlgorithm()));
    }
}
