/**
 * @NApiVersion 2.x
 * @NScriptType scheduledscript
 * @author YQ12681 Zhu Yanlong
 */
define([ 'N/runtime', 'N/url' ],
/**
 * @param {runtime} runtime
 * @param {url} url
 */
function(runtime, url) {
	/**
	 * Definition of the Scheduled script trigger point.
	 * 
	 * @param {Object} scriptContext
	 * @param {string} scriptContext.type - The context in which the script is executed. It is one of the values from the scriptContext.InvocationType enum.
	 * @Since 2015.2
	 */
	function execute(scriptContext) {

		var scriptObj = runtime.getCurrentScript();
		log.debug("Remaining governance units start: " + scriptObj.getRemainingUsage());

		try {
			for (var i = 0; i < 1000; i++)
				var r = dao.upsertBomAllRecord('PUT', requestBody);

			log.debug({
				title : 'addSuccess',
				details : JSON.stringify(r)
			});

			log.debug("Remaining governance units success: " + scriptObj.getRemainingUsage());
			return {
				'isSuccess' : true,
				'bomData' : r
			}
		} catch (e) {
			log.debug({
				title : 'PUT bom error: ' + e.name,
				details : e.message

			});
			return e;
		} finally {
			log.debug("Remaining governance units finally: " + scriptObj.getRemainingUsage());
		}

	}

	return {
		execute : execute
	};
});