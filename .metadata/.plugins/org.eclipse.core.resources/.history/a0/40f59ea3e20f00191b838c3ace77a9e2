package com.bansi.ws.nscux;

import java.rmi.RemoteException;

import javax.xml.rpc.ServiceException;



public class CuxClient {

	public CuxClient() {
		NetSuiteServiceLocator nsservice = new NetSuiteServiceLocator();
		nsservice.setMaintainSession(true);

		NetSuitePortType port = null;
		try {
			port = nsservice.getNetSuitePort();
		} catch (ServiceException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		Passport passport = new Passport();

		passport.setEmail("username@netsuite.com");
		passport.setPassword("mypassword");

		RecordRef role = new RecordRef();

		role.setInternalId("3");

		passport.setRole(role);
		passport.setAccount("TSTDRV96");

		//	Status status = port.login(passport).getStatus();
		try {
			StatusDetail[] sta = port.login(passport).getStatus();
		} catch (InsufficientPermissionFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidCredentialsFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidAccountFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidVersionFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExceededRequestLimitFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnexpectedErrorFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidSessionFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		Customer cust = new Customer();
		cust.setEntityId("XYZ Inc");
		try {
			WriteResponse response = port.add(cust);
		} catch (InsufficientPermissionFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidCredentialsFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExceededConcurrentRequestLimitFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExceededRecordCountFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExceededRequestSizeFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExceededRequestLimitFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExceededUsageLimitFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnexpectedErrorFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidSessionFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		try {
			port.logout();
		} catch (InsufficientPermissionFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidCredentialsFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ExceededRequestLimitFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnexpectedErrorFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (InvalidSessionFault e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
